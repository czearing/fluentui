{"file":"C:\\Users\\czear\\Documents\\fluentui\\tools\\generators\\workspace-generator\\index.ts","mappings":";;;;;;;;;;;AAAA,6BAA6B;AAC7B,yCAAuF;AAMvF,mBAA+B,IAAU,EAAE,MAAyC;;QAClF,MAAM,OAAO,GAAG,gBAAgB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAE/C,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAExB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;YACvB,MAAM,oBAAW,CAAC,IAAI,CAAC,CAAC;SACzB;IACH,CAAC;CAAA;AARD,4BAQC;AAED,SAAS,gBAAgB,CAAC,IAAU,EAAE,OAA0C;IAC9E,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;QAC7B,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;KACrC;IAED,MAAM,QAAQ,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC;IACvC,MAAM,WAAW,GAAG,OAAO,CAAC;IAE5B,qDACK,QAAQ,GACR,OAAO,KACV,WAAW,EACX,KAAK,EAAE;YACL,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,YAAY,CAAC;SACjD,IACD;AACJ,CAAC;AAED,SAAS,QAAQ,CAAC,IAAU,EAAE,OAAyB;IACrD,MAAM,eAAe,iDAChB,OAAO,GACP,cAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KACtB,cAAc,EAAE,uBAAc,CAAC,OAAO,CAAC,WAAW,CAAC,EACnD,IAAI,EAAE,EAAE,GACT,CAAC;IAEF,sBAAa,CACX,IAAI,EACJ,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAC7B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,IAAI,CAAC,EACjD,eAAe,CAChB,CAAC;AACJ,CAAC","names":[],"sources":["C:\\Users\\czear\\Documents\\fluentui\\tools\\generators\\workspace-generator\\index.ts"],"sourcesContent":["import * as path from 'path';\r\nimport { Tree, formatFiles, generateFiles, names, offsetFromRoot } from '@nrwl/devkit';\r\n\r\nimport { WorkspaceGeneratorGeneratorSchema } from './schema';\r\n\r\ninterface NormalizedSchema extends ReturnType<typeof normalizeOptions> {}\r\n\r\nexport default async function (host: Tree, schema: WorkspaceGeneratorGeneratorSchema) {\r\n  const options = normalizeOptions(host, schema);\r\n\r\n  addFiles(host, options);\r\n\r\n  if (!options.skipFormat) {\r\n    await formatFiles(host);\r\n  }\r\n}\r\n\r\nfunction normalizeOptions(host: Tree, options: WorkspaceGeneratorGeneratorSchema) {\r\n  if (options.name.length === 0) {\r\n    throw new Error('name is required');\r\n  }\r\n\r\n  const defaults = { skipFormat: false };\r\n  const projectRoot = 'tools';\r\n\r\n  return {\r\n    ...defaults,\r\n    ...options,\r\n    projectRoot,\r\n    paths: {\r\n      generators: path.join(projectRoot, 'generators'),\r\n    },\r\n  };\r\n}\r\n\r\nfunction addFiles(host: Tree, options: NormalizedSchema) {\r\n  const templateOptions = {\r\n    ...options,\r\n    ...names(options.name),\r\n    offsetFromRoot: offsetFromRoot(options.projectRoot),\r\n    tmpl: '',\r\n  };\r\n\r\n  generateFiles(\r\n    host,\r\n    path.join(__dirname, 'files'),\r\n    path.join(options.paths.generators, options.name),\r\n    templateOptions,\r\n  );\r\n}\r\n"],"version":3}